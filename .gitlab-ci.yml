stages:
    - setup
    - test
    - generate-image

# Install the node modules
setup:
    stage: setup
    image: node:12
    tags:
        - startfleet
    artifacts:
        name: "artifacts-$CI_PIPELINE_ID"
        expire_in: 1 hour
        paths:
            - node_modules/
    script:
        - npm ci

# Use the node modules to test code linting
linter-test:
    stage: test
    image: node:12
    dependencies: 
        - setup
    script:
        - npm run lint src/

####################################

# this part generate the docker images for test and production
generate-testing:
    stage: generate-image
    image: docker:19.03.1
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - DOCKER_BUILDKIT=1 docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    except:
        - tags

generate-production:
    stage: generate-image
    image: docker:19.03.1
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - DOCKER_BUILDKIT=1 docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    only:
        - tags
