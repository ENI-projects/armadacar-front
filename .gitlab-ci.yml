stages:
    - setup
    - test
    - build
    - deploy

variables:
    PROD_KUBECONFIG: prod-kubeconfig.yml
# Install the node modules
setup:
    stage: setup
    image: node:12
    tags:
        - startfleet
    artifacts:
        name: "artifacts-$CI_PIPELINE_ID"
        expire_in: 1 hour
        paths:
            - node_modules/
    script:
        - npm ci

####################################

# Use the node modules to test code linting
lint:
    stage: test
    image: node:12
    tags:
        - startfleet
    dependencies: 
        - setup
    script:
        - npm run lint src/

# Use the node modules to do unit tests
unit:
    stage: test
    image: node:12
    tags:
        - startfleet
    dependencies: 
        - setup
    script:
        - npm run test:unit

####################################

# this part generate the docker images for test and production
testing:
    stage: build
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    tags:
        - startfleet
    script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    except:
        - tags

production:
    stage: build
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    tags:
        - startfleet
    script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --destination $CI_REGISTRY_IMAGE:release
    only:
        - tags

# This part deploys Armadacar to production
deploy:
    stage: deploy
    image: registry.gitlab.com/startfleet/gitlab-runner:master
    tags:
        - startfleet
    script:
        - echo $KUBECONFIG | base64 -d | cat $2 > $PROD_KUBECONFIG
        - export KUBECONFIG=$PROD_KUBECONFIG
        - kubectl -n armadacar rollout status deployment/armadacar-deployment
    only:
        - tags
